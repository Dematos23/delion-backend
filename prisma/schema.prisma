generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id          Int          @id @unique @default(autoincrement())
  createdAt   DateTime     @default(now()) @map(name: "created_at")
  updatedAt   DateTime     @updatedAt @map(name: "updated_at")
  //
  nombre      String
  apellido    String
  email       String       @unique
  password    String
  //
  tipoUsuario tiposUsuario @map("tipo_usuario")

  //
  // modulos     ModulosUsuarios[]
  creador     Tareas[] @relation("creador")
  responsable Tareas[] @relation("responsable")
  supervisor  Tareas[] @relation("supervisor")
  // equipo      Equipos? @relation(fields: [equiposId], references: [id])
  equiposId   Int?     @map("equipos_id")
  @@map(name: "usuarios")
}

model Tareas {
  id            Int              @id @unique @default(autoincrement())
  createdAt     DateTime         @default(now()) @map(name: "created_at")
  updatedAt     DateTime         @updatedAt @map(name: "updated_at")
  //
  tarea         String
  descripcion   String           @default("")
  deadline      DateTime
  //
  estado        estados
  creadorId     Int              @map(name: "creador_id")
  responsableId Int              @map(name: "responsable_id")
  supervisorId  Int              @map(name: "supervisor_id")
  // expedienteId  Int?       @map(name: "expediente_id")
  //
  creador       Usuarios         @relation("creador", fields: [creadorId], references: [id])
  responsable   Usuarios         @relation("responsable", fields: [responsableId], references: [id])
  supervisor    Usuarios         @relation("supervisor", fields: [supervisorId], references: [id])
  // Estados       Estados?   @relation(fields: [estadosId], references: [id])
  archivos      ArchivosTareas[]

  @@map(name: "tareas")
}

model ArchivosTareas {
  id        Int      @id @unique @default(autoincrement())
  createdAt DateTime @default(now()) @map(name: "created_at")
  url       String   @unique
  tareasId  Int?     @map("tareas_id")
  Tareas    Tareas?  @relation(fields: [tareasId], references: [id])
  nombre    String   @default("archivo")

  @@map("archivos_tareas")
}

// model Equipos {
//   id        Int        @id @unique @default(autoincrement())
//   createdAt DateTime   @default(now()) @map("created_at")
//   nombre    String     @unique
//   miembros  Usuarios[]
// }

enum tiposUsuario {
  SUPERADMIN
  ADMIN
  SUPERVISOR
  USUARIO
}

enum estados {
  COMPLETO
  EN_PROCESO
  EN_REVISION
}

model Casos {
  id         Int           @id @unique @default(autoincrement())
  createdAt  DateTime      @default(now()) @map(name: "created_at")
  expediente Expedientes[]
}

model Expedientes {
  id                Int      @id @unique @default(autoincrement())
  createdAt         DateTime @default(now()) @map(name: "created_at")
  expediente        String   @unique
  expedienteAno     Int      @map("expediente_ano")
  fechaPresentacion DateTime @map("fecha_presentacion")
  resolucion        String   @unique
  resolucionAno     Int      @map("resolucion_ano")
  fechaResolucion   DateTime @map("fecha_resolucion")
  // Marcas            Marcas?  @relation(fields: [marcasId], references: [id])
  // marcasId          Int?
  Casos             Casos?   @relation(fields: [casosId], references: [id])
  casosId           Int?
}

model Marcas {
  id        Int      @id @unique @default(autoincrement())
  createdAt DateTime @default(now()) @map(name: "created_at")

  // expedientes Expedientes[]

  nombre           String?
  clases           Int[]
  logo             ArchivosMarcas?
  descripcionLogo  String          @map("descripcion_logo")
  tipoMarca        tipoMarca       @map("tipo_marca")
  productos        String
  certificado      Int?            @unique
  fechaVencimiento DateTime?       @map("fecha_vencimiento")
  fechaPublicacion DateTime?       @map("fecha_publicacion")

  @@map("marcas")
}

model ArchivosMarcas {
  id        Int      @id @unique @default(autoincrement())
  createdAt DateTime @default(now()) @map(name: "created_at")
  url       String   @unique
  nombre    String   @default("archivo")
  marcaId   Int      @unique @map("marca_id")
  Marcas    Marcas   @relation(fields: [marcaId], references: [id])

  @@map("archivos_marcas")
}

enum marcaEstado {
  OTORGADO
  DENAGADO
  EN_PROCESO
}

enum tipoMarca {
  NOMINATIVA
  FIGURATIVA
  MIXTA
}
