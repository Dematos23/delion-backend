generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id          Int          @id @unique @default(autoincrement())
  createdAt   DateTime     @default(now()) @map(name: "created_at")
  updatedAt   DateTime     @updatedAt @map(name: "updated_at")
  //
  nombre      String
  apellido    String
  email       String       @unique
  password    String
  //
  tipoUsuario tiposUsuario

  //
  // modulos     ModulosUsuarios[]
  creador     Tareas[] @relation("creador")
  responsable Tareas[] @relation("responsable")
  supervisor  Tareas[] @relation("supervisor")
  // TiposUsuario TiposUsuario      @relation(fields: [tipoUsuario], references: [id])

  @@map(name: "usuarios")
}

// model Modulos {
//   id       Int               @id @unique @default(autoincrement())
//   nombre   String            @unique
//   usuarios ModulosUsuarios[]

//   @@map("modulos")
// }

// model ModulosUsuarios {
//   assignedAt DateTime @default(now())
//   assignedBy String
//   //
//   usuarioId  Int      @map("usuario_id")
//   moduloId   Int      @map("modulo_id")
//   //
//   usuario    Usuarios @relation(fields: [usuarioId], references: [id])
//   modulo     Modulos  @relation(fields: [moduloId], references: [id])

//   @@id([usuarioId, moduloId])
//   @@map("modulos_usuarios")
// }

enum tiposUsuario {
  SUPERADMIN
  ADMIN
  SUPERVISOR
  USUARIO
}

// model TiposUsuario {
//   id          Int          @id @unique @default(autoincrement())
//   tipoUsuario tiposUsuario @unique @map("tipo_usuario")
//   usuarios    Usuarios[]

//   @@map("tipos_usuario")
// }

model Tareas {
  id            Int        @id @unique @default(autoincrement())
  createdAt     DateTime   @default(now()) @map(name: "created_at")
  updatedAt     DateTime   @updatedAt @map(name: "updated_at")
  //
  tarea         String
  deadline      DateTime
  //
  estado        estados
  creadorId     Int        @map(name: "creador_id")
  responsableId Int        @map(name: "responsable_id")
  supervisorId  Int        @map(name: "supervisor_id")
  expedienteId  Int?       @map(name: "expediente_id")
  //
  creador       Usuarios   @relation("creador", fields: [creadorId], references: [id])
  responsable   Usuarios   @relation("responsable", fields: [responsableId], references: [id])
  supervisor    Usuarios   @relation("supervisor", fields: [supervisorId], references: [id])
  // Estados       Estados?   @relation(fields: [estadosId], references: [id])
  archivos      Archivos[]

  @@map(name: "tareas")
}

model Archivos {
  id        Int      @id @unique @default(autoincrement())
  createdAt DateTime @default(now()) @map(name: "created_at")
  url       String   @unique
  tareasId  Int?
  Tareas    Tareas?  @relation(fields: [tareasId], references: [id])
}

// model Estados {
//   id     Int      @id @unique @default(autoincrement())
//   estado estados  @unique
//   Tareas Tareas[]
// }

enum estados {
  COMPLETO
  EN_PROCESO
  EN_REVISION
}
